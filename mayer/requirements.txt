Separate data layout from data access.
    Why: Algorithm implemementation should not depend on data layout.

Make the tool easy to use.
    => automatic return value typing
    => passing data slices to functions (to aid abstraction)
        HINT: define virtual data layouts that map to physical data layout?

Make the tool performant.
    => use compile-time features as much as possible
    => aviod pointer derefecencing when possible


Observations
------------

Tuples should not be iterated at runtime, causes return value ambiguity.
    RESULT: No, they have to be, because paths have to be runtime only.
    Otherwise we need to pass compiletime values as template arguments EVERYWHERE,
    even in the user code which makes it super messy.
    
    But that's ok, coz we infer the value type from virtual layout.

All algorithms at some point work with scalar values only - make scalar value access the priority.
